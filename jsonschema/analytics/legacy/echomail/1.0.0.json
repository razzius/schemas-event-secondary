{
  "title": "analytics/legacy/echomail",
  "description": "Logs notifications mailed to registered users with valid email addresses. Schema:Echo logs notifications staged for email delivery, while this schema logs messages actually delivered.",
  "$id": "/analytics/legacy/echomail/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "$schema",
    "event",
    "meta"
  ],
  "properties": {
    "event": {
      "type": "object",
      "required": [
        "version",
        "recipientUserId",
        "emailDeliveryMode"
      ],
      "properties": {
        "emailDeliveryMode": {
          "description": "Email delivery mode, determined by the notification settings and by user preferences",
          "type": "string",
          "enum": [
            "single",
            "bundle",
            "daily_digest",
            "weekly_digest"
          ]
        },
        "recipientUserId": {
          "description": "Recipient user ID",
          "type": "integer",
          "minimum": -9007199254740991,
          "maximum": 9007199254740991
        },
        "version": {
          "description": "References the full specifications of the current version of Echo (adding new notification types or changing the schema requires a version change), example: 1.1",
          "type": "string"
        }
      }
    },
    "$schema": {
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n",
      "type": "string"
    },
    "client_dt": {
      "description": "ISO-8601 formatted timestamp of when the event occurred/was generated in UTC). This exists separately from meta.dt in the main common schema. For external client-sent instrumentation events, we want to allow meta.dt to be the received time (filled in by EventGate at ingest time), as we don't trust client-sent events to always set the proper date and time. Client-set event generation time should be set here instead. See: https://phabricator.wikimedia.org/T240460\n",
      "type": "string",
      "format": "date-time",
      "maxLength": 128
    },
    "dt": {
      "description": "UTC ISO-8601 timestamp of event.  Deprecated, use meta.dt.",
      "type": "string",
      "format": "date-time",
      "maxLength": 128
    },
    "http": {
      "type": "object",
      "properties": {
        "has_cookies": {
          "description": "True if the http request has any cookies set",
          "type": "boolean"
        },
        "method": {
          "description": "The HTTP request method (GET, POST, etc.)",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol used for the request (HTTP or HTTPS)",
          "type": "string"
        },
        "request_headers": {
          "description": "Request headers sent by the client.  E.g. user-agent, etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "response_headers": {
          "description": "Response headers sent back to the client (when known).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status_code": {
          "description": "The HTTP status code returned for this request (when known)",
          "type": "integer",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991
        }
      }
    },
    "ip": {
      "description": "Client IP address that sent this event, usually best guess parsed out of from X-Client-IP header which is set by varnish from X-Forwarded-For. Deprecated, use http.client_ip.\n",
      "type": "string"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "domain": {
          "description": "Domain the event or entity pertains to",
          "type": "string",
          "minLength": 1
        },
        "dt": {
          "description": "UTC event datetime, in ISO-8601 format",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "id": {
          "description": "Unique ID of this event",
          "type": "string"
        },
        "request_id": {
          "description": "Unique ID of the request that caused the event",
          "type": "string"
        },
        "stream": {
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "type": "string",
          "minLength": 1
        },
        "uri": {
          "description": "Unique URI identifying the event or entity",
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192
        }
      }
    },
    "recvFrom": {
      "description": "Hostname of server emitting the log line.  Deprecated.",
      "type": "string"
    },
    "revision": {
      "description": "Revision ID of event schema.  Deprecated.",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    },
    "schema": {
      "description": "Title of event schema.  Deprecated.",
      "type": "string"
    },
    "seqId": {
      "description": "Udp2log sequence ID.  Deprecated.",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    },
    "topic": {
      "description": "The queue topic name this event belongs in.  Deprecated.",
      "type": "string"
    },
    "uuid": {
      "description": "Unique event identifier.  Deprecated, use meta.id.",
      "type": "string",
      "maxLength": 128
    },
    "webHost": {
      "description": "Request host. 'window.location.hostname' on client-side events; $_SERVER['HTTP_HOST'] on server.",
      "type": "string"
    },
    "wiki": {
      "description": "$wgDBName e.g. enwiki",
      "type": "string"
    }
  },
  "examples": [
    {
      "$schema": "/analytics/legacy/echomail/1.0.0",
      "client_dt": "2020-04-02T19:11:20.942Z",
      "dt": "2020-04-02T19:11:20.942Z",
      "event": {
        "version": "example",
        "recipientUserId": 0,
        "emailDeliveryMode": "single"
      },
      "meta": {
        "dt": "2020-04-02T19:11:20.942Z",
        "id": "b0caf18d-6c7f-4403-947d-2712bbe28610",
        "stream": "eventlogging_EchoMail"
      },
      "schema": "EchoMail"
    }
  ],
  "additionalProperties": false
}