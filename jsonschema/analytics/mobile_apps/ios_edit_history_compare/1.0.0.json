{
  "title": "analytics/mobile_apps/ios_edit_history_compare",
  "description": "Track user actions when using the Edit History feature\nThis schema was migrated from legacy MobileWikiAppiOSEditHistoryCompare. More details about the original specification can be found in Phab:T241269\n",
  "$id": "/analytics/mobile_apps/ios_edit_history_compare/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "$schema",
    "action",
    "app_install_id",
    "app_session_id",
    "client_dt",
    "is_anon",
    "meta",
    "primary_language"
  ],
  "examples": [
    {
      "$schema": "/analytics/mobile_apps/ios_edit_history_compare/1.0.0",
      "meta": {
        "stream": "ios.edit_history_compare",
        "dt": "2020-06-11T19:20:00.649Z",
        "domain": "en.wikipedia.org"
      },
      "client_dt": "2020-06-11T19:20:00.649Z",
      "app_install_id": "00AB59AC-77A1-4484-B49D-A047A036C77B",
      "app_session_id": "dd21852b02db926a1b81",
      "action": "show_history",
      "primary_language": "en",
      "is_anon": true
    }
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "UTC event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "http": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "The HTTP request method (GET, POST, etc.)"
        },
        "status_code": {
          "description": "The HTTP status code returned for this request (when known)",
          "type": "integer",
          "minimum": -9007199254740991,
          "maximum": 9007199254740991
        },
        "client_ip": {
          "type": "string",
          "description": "The http client's IP address"
        },
        "has_cookies": {
          "type": "boolean",
          "description": "True if the http request has any cookies set"
        },
        "request_headers": {
          "type": "object",
          "description": "Request headers sent by the client.  E.g. user-agent, etc.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "response_headers": {
          "type": "object",
          "description": "Response headers sent back to the client (when known).",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "client_dt": {
      "type": "string",
      "format": "date-time",
      "maxLength": 128,
      "description": "ISO-8601 formatted timestamp of when the event occurred/was generated in UTC). This exists separately from meta.dt in the main common schema. For external client-sent instrumentation events, we want to allow meta.dt to be the received time (filled in by EventGate at ingest time), as we don't trust client-sent events to always set the proper date and time. Client-set event generation time should be set here instead. See: https://phabricator.wikimedia.org/T240460\n"
    },
    "app_install_id": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      "description": "Identifies an install of the app and persists across all sessions. When the user uninstalls the app and re-installs it, a new app install ID is randomly generated.\nThis UUIDv4 identifier is assigned automatically by the EPC library in the the Wikipedia app for Android and iOS.\n"
    },
    "app_session_id": {
      "type": "string",
      "minLength": 20,
      "maxLength": 20,
      "pattern": "^[0-9a-z]{20}$",
      "description": "Identifies an app session: a cluster of actions taken by the user in the app within a limited period of time. A session ID is generated the first time it is requested by the instrumentation code, which will usually be soon after the user launches the app. A new session ID is generated anytime the app has been inactive (that is, in the background state) for at least 15 minutes or has been forcibly stopped by the OS or the user.\nThis identifier is managed and assigned automatically by the EPC library in the Wikipedia app for Android and iOS.\n"
    },
    "action": {
      "type": "string",
      "enum": [
        "show_history",
        "revision_view",
        "compare1",
        "compare2",
        "thank_try",
        "thank_success",
        "thank_fail"
      ],
      "description": "Which particular action triggered this event, as described below:\nshow_history:\n  User tapped 'View edit history' while reading an article, which took\n  them to the History screen\nrevision_view:\n  User tapped a revision in the History or History Compare screens to\n  view more details about the individual revision\ncompare1:\n  User tapped 'Compare' in the History screen to start selecting the\n  revisions to compare\ncompare2:\n  User has selected a second revision and tapped the 'Compare' button,\n  navigating them to the comparison screen.\nthank_try:\n  User tapped the 'Thank' icon on revision detail screen\nthank_success:\n  User's thanks was successfully sent to the editor who made the\n  revision\nthank_fail:\n  User received an error after trying to thank the editor (e.g. if\n  user is not logged in, anonymous thanks are not allowed)\n"
    },
    "primary_language": {
      "type": "string",
      "description": "User's primary language."
    },
    "is_anon": {
      "type": "boolean",
      "description": "Whether user is anonymous or logged-in."
    }
  }
}