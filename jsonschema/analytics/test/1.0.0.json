{
  "title": "analytics/test",
  "description": "For simple tests of analytics instrumentation\n",
  "$id": "/analytics/test/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "$schema",
    "client_dt",
    "meta"
  ],
  "examples": [
    {
      "$schema": "/analytics/test/1.0.0",
      "meta": {
        "stream": "test.analytics.ios",
        "dt": "2020-06-11T19:20:00.649Z"
      },
      "client_dt": "2020-06-11T19:20:00.649Z",
      "app_install_id": "00AB59AC-77A1-4484-B49D-A047A036C77B",
      "app_session_id": "dd21852b02db926a1b81",
      "test_string": "Explore View refreshed",
      "test_map": {
        "file": "Features/Feed/ExploreViewController.swift",
        "method": "refreshControlActivated"
      }
    },
    {
      "$schema": "/analytics/test/1.0.0",
      "meta": {
        "stream": "test.analytics.mediawiki",
        "dt": "2020-06-11T19:20:00.649Z",
        "domain": "en.wikipedia.org"
      },
      "client_dt": "2020-06-11T19:20:00.649Z",
      "web_session_id": "0aac0b2976c12a600a58",
      "web_pageview_id": "ba618e81066d4ea60b42",
      "test_string": "mw.config.get()",
      "test_map": {
        "skin": "vector",
        "wgVersion": "1.36.0-wmf.5",
        "wgDBname": "enwiki"
      }
    }
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "UTC event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "http": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "The HTTP request method (GET, POST, etc.)"
        },
        "status_code": {
          "description": "The HTTP status code returned for this request (when known)",
          "type": "integer",
          "minimum": -9007199254740991,
          "maximum": 9007199254740991
        },
        "client_ip": {
          "type": "string",
          "description": "The http client's IP address"
        },
        "has_cookies": {
          "type": "boolean",
          "description": "True if the http request has any cookies set"
        },
        "request_headers": {
          "type": "object",
          "description": "Request headers sent by the client.  E.g. user-agent, etc.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "response_headers": {
          "type": "object",
          "description": "Response headers sent back to the client (when known).",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "client_dt": {
      "type": "string",
      "format": "date-time",
      "maxLength": 128,
      "description": "ISO-8601 formatted timestamp of when the event occurred/was generated in UTC). This exists separately from meta.dt in the main common schema. For external client-sent instrumentation events, we want to allow meta.dt to be the received time (filled in by EventGate at ingest time), as we don't trust client-sent events to always set the proper date and time. Client-set event generation time should be set here instead. See: https://phabricator.wikimedia.org/T240460\n"
    },
    "app_install_id": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      "description": "Identifies an install of the app and persists across all sessions. When the user uninstalls the app and re-installs it, a new app install ID is randomly generated.\nThis UUIDv4 identifier is assigned automatically by the EPC library in the the Wikipedia app for Android and iOS.\n"
    },
    "app_session_id": {
      "type": "string",
      "minLength": 20,
      "maxLength": 20,
      "pattern": "^[0-9a-z]{20}$",
      "description": "Identifies an app session: a cluster of actions taken by the user in the app within a limited period of time. A session ID is generated the first time it is requested by the instrumentation code, which will usually be soon after the user launches the app. A new session ID is generated anytime the app has been inactive (that is, in the background state) for at least 15 minutes or has been forcibly stopped by the OS or the user.\nThis identifier is managed and assigned automatically by the EPC library in the Wikipedia app for Android and iOS.\n"
    },
    "web_session_id": {
      "type": "string",
      "minLength": 20,
      "maxLength": 20,
      "pattern": "^[0-9a-z]{20}$",
      "description": "Identifies a web session: a cluster of actions taken by the user on a website within a limited period of time. A session ID is generated the first time it is requested by the instrumentation code, which is usually the first time the user visits the website.\nIn the current implementation, this ID is shared across windows, tabs, and page views in the same browser. The ID is normally regenerated after the browser is shut down; however, if the browser's \"restore previous session\" feature is used when it restarts, the previous ID is retained.\nInteractions across multiple pages in the same web session may be linked together via this identifier.\nInstrumentation code should assign this with mw.user.sessionId()\n"
    },
    "web_pageview_id": {
      "type": "string",
      "minLength": 20,
      "maxLength": 20,
      "pattern": "^[0-9a-z]{20}$",
      "description": "Identifies a single web page view (visit). This identifier is randomly generated the first time it is requested by the instrumentation code on any page view and persists for the lifetime of the page. When the user navigates to another page or refreshes/reloads the page, this identifier disappears and a new one is regenerated (when needed). Different visits to the same page will yield different pageview IDs (also called tokens).\nInteractions with multiple features (instrumented separately) on the same web page may be linked together via this identifier.\nInstrumentation code should assign this with mw.user.getPageviewToken()\n"
    },
    "test_string": {
      "type": "string"
    },
    "test_map": {
      "type": "object",
      "description": "We want to support 'map' types using additionalProperties to specify the value types. (Keys are always strings.)\n",
      "additionalProperties": {
        "type": "string"
      }
    }
  }
}