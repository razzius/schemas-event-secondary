title: sparql/query
description: >
  A sparql query received on the triplet store backends (e.g.
  query.wikidata.org)
$id: /sparql/query/1.1.0
$schema: 'https://json-schema.org/draft-07/schema#'
type: object
additionalProperties: false
required:
  - $schema
  - backend_host
  - http
  - meta
  - namespace
  - query
properties:
  $schema:
    description: >
      A URI identifying the JSONSchema for this event. This should match an
      schema's $id in a schema repository. E.g. /schema/title/1.0.0
    type: string
  meta:
    type: object
    required:
      - dt
      - stream
    properties:
      uri:
        type: string
        format: uri-reference
        maxLength: 8192
        description: Unique URI identifying the event or entity
      request_id:
        description: Unique ID of the request that caused the event
        type: string
      id:
        description: Unique ID of this event
        type: string
      dt:
        type: string
        format: date-time
        maxLength: 128
        description: 'UTC event datetime, in ISO-8601 format'
      domain:
        description: Domain the event or entity pertains to
        type: string
        minLength: 1
      stream:
        description: Name of the stream/queue/dataset that this event belongs in
        type: string
        minLength: 1
  http:
    description: Information about the HTTP request that generated an event.
    type: object
    properties:
      method:
        description: 'The HTTP request method (GET, POST, etc.)'
        type: string
      client_ip:
        description: The HTTP client's IP address
        type: string
      request_headers:
        description: Request headers sent by the client.
        type: object
        additionalProperties:
          type: string
      response_headers:
        description: Response headers sent back to the client (when known).
        type: object
        additionalProperties:
          type: string
      has_cookies:
        description: True if the HTTP request has any cookies set
        type: boolean
      status_code:
        description: The HTTP status code returned for this request (when known)
        type: integer
        minimum: -9007199254740991
        maximum: 9007199254740991
  backend_host:
    description: Hostname of sparql endpoint (blazegraph) server handling this sparql query
    type: string
  namespace:
    description: |
      Name of the database being requested
    type: string
  query:
    description: sparql query received
    type: string
  query_time:
    description: query time
    type: integer
    minimum: -9007199254740991
    maximum: 9007199254740991
  format:
    description: the format requested (overrides the Accept header if set)
    type: string
  params:
    description: >
      Request parameters. Usually from the HTTP query string or in the request
      body if the POST method is used. Note that the query and format params are
      not duplicated in this property.
    type: object
    additionalProperties:
      type: string
  system_runtime_metrics:
    description: Runtime metrics of the service running the query.
    type: object
    required:
      - running_queries_before
      - running_queries_after
      - cpu_load_average
    properties:
      running_queries_before:
        description: Number of concurrent queries running before this one.
        type: integer
        minimum: -9007199254740991
        maximum: 9007199254740991
      running_queries_after:
        description: Number of concurrent queries running after this one.
        type: integer
        minimum: -9007199254740991
        maximum: 9007199254740991
      cpu_load_average:
        description: >
          Average CPU load (defined as an 1 minute average of number of
          processes queued for execution and running), measured right after the
          query.
        type: number
        minimum: -9007199254740991
        maximum: 9007199254740991
examples:
  - $schema: /sparql/query/1.1.0
    meta:
      stream: sparql_query_example
      dt: '2020-07-01T00:00:00Z'
    http:
      method: GET
      has_cookies: false
      status_code: 200
    backend_host: wdqs-example1001
    namespace: wdq
    query: example_query
    format: json
    system_runtime_metrics:
      running_queries_before: 3
      running_queries_after: 2
      cpu_load_average: 0.84
